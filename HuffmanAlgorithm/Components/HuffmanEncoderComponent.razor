@using HuffmanAlgorithm.Services
@using HuffmanAlgorithm.Interfaces
@using HuffmanAlgorithm.Components
@using HuffmanAlgorithm.Models
@inject IHuffmanEncoderService HuffmanEncoderService
@inject HuffmanProcessingData _huffmanProcessingData
@implements IDisposable



<h3 class="huffman-encoder-component-title">Huffman Encoder & Decoder</h3>
<div class="huffman-encoder-component-textarea-container">
    <HuffmanTextAreaComponent />
</div>
<div class="huffman-encoder-component-summary-container">
    <HuffmanSummaryComponent/>
</div>


@if (_huffmanProcessingData.IsPending)
{
    <p>Coding is pending...</p>
}

@code {
    protected override void OnInitialized()
    {
        HuffmanEncoderService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        HuffmanEncoderService.OnChange -= StateHasChanged;
    }

}
